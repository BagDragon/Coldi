<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Back.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>